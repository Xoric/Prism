package xoric.prism.creator.drawer.view;

import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JPanel;

import xoric.prism.creator.drawer.model.AnimationModel;
import xoric.prism.world.entities.AnimationIndex;

public class AnimationLineWithControls extends AnimationLine implements ActionListener
{
	private static final long serialVersionUID = 1L;

	private final JButton addButton;
	private final JButton editButton;
	private final JButton deleteButton;

	public AnimationLineWithControls(AnimationIndex animation)
	{
		super(animation);

		addButton = createButton("Add", "icons/add.png", "Click here to add this animation");
		editButton = createButton("Edit", "icons/edit.png", "Click here to edit this animation");
		deleteButton = createButton("Delete", "icons/del.png", "Click here to delete this animation");

		JPanel buttonPanel = new JPanel(new FlowLayout());
		buttonPanel.add(addButton);
		buttonPanel.add(editButton);
		buttonPanel.add(deleteButton);

		GridBagConstraints c = new GridBagConstraints(1, 0, 1, 2, 0.0, 1.0, GridBagConstraints.EAST, GridBagConstraints.NONE, new Insets(0,
				0, 0, 0), 0, 0);
		add(buttonPanel, c);

		setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));
		showAddButton(true);
	}

	@Override
	public void setEnabled(boolean enabled)
	{
		super.setEnabled(enabled);
		addButton.setEnabled(enabled);
		deleteButton.setEnabled(enabled);
	}

	private void showAddButton(boolean b)
	{
		addButton.setVisible(b);
		editButton.setVisible(!b);
		deleteButton.setVisible(!b);
	}

	@Override
	public void displayAnimation(AnimationModel m)
	{
		// show/hide buttons
		isUsed = m.isUsed();
		showAddButton(!isUsed);

		// display other information
		// TODO
	}
}
