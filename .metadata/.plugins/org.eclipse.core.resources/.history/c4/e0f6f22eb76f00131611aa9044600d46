package xoric.prism.world.map.routing;

import java.util.ArrayList;
import java.util.List;

import xoric.prism.data.FloatPoint;
import xoric.prism.data.FloatRect;
import xoric.prism.data.IFloatPoint_r;
import xoric.prism.data.IFloatRect_r;
import xoric.prism.data.IPoint_r;
import xoric.prism.world.map.Tile;
import xoric.prism.world.movement.View8;

/**
 * @author XoricLee
 * @since 02.01.2012, 13:29:52
 */
public class Route
{
	private static final IFloatRect_r[] onsets;
	static
	{
		FloatPoint full = new FloatPoint(Tile.WIDTH, Tile.HEIGHT);
		FloatPoint small = new FloatPoint(full);
		small.multiply(0.3f, 0.5f);

		float z = 0.0f;
		float x2 = full.getX() - small.getX();
		float y2 = full.getY() - small.getY();

		onsets = new FloatRect[9];
		onsets[View8.RIGHT.ordinal()] = new FloatRect(x2, z, small.getX(), full.getY());
		onsets[View8.TOP_RIGHT.ordinal()] = new FloatRect(x2, z, small.getX(), small.getY());
		onsets[View8.TOP.ordinal()] = new FloatRect(z, z, full.getX(), small.getY());
		onsets[View8.TOP_LEFT.ordinal()] = new FloatRect(z, z, small.getX(), small.getY());
		onsets[View8.LEFT.ordinal()] = new FloatRect(z, z, small.getX(), full.getY());
		onsets[View8.BOTTOM_LEFT.ordinal()] = new FloatRect(z, y2, small.getX(), small.getY());
		onsets[View8.BOTTOM.ordinal()] = new FloatRect(z, y2, full.getX(), small.getY());
		onsets[View8.BOTTOM_RIGHT.ordinal()] = new FloatRect(x2, y2, small.getX(), small.getY());
		onsets[8] = new FloatRect(z, z, full.getX(), full.getY());
	}

	private List<IPoint_r> nodes;
	private IFloatPoint_r finalPos;

	public Route()
	{
		nodes = new ArrayList<IPoint_r>();
	}

	/**
	 * Adds a node to the route.
	 * @param coords
	 */
	public void addNode(IPoint_r coords)
	{
		nodes.add(coords);
	}

	private static IFloatRect_r getOnset(View8 angle)
	{
		int index = angle != null ? angle.ordinal() : 8;
		return onsets[index];
	}

	/**
	 * Optionally specifies a final destination <b>within the last tile</b> that will be triggered once a participant has reached the node
	 * before the last one.
	 * @param finalPos
	 */
	public void setFinalPos(IFloatPoint_r finalPos)
	{
		if (finalPos != null)
		{
			this.finalPos = new FloatPoint(finalPos);
		}
		else
		{
			this.finalPos = null;
		}
	}
}
