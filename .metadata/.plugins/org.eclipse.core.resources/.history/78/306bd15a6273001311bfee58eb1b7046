package xoric.prism.global;

import xoric.prism.data.exceptions.PrismException;
import xoric.prism.data.exceptions.PrismMetaFileException;
import xoric.prism.data.global.FileTable;
import xoric.prism.data.global.IPrismGlobal;
import xoric.prism.data.meta.MetaBlock;
import xoric.prism.data.meta.MetaFile;
import xoric.prism.data.meta.MetaKey;
import xoric.prism.data.meta.MetaLine;
import xoric.prism.data.meta.MetaList;
import xoric.prism.data.meta.MetaType;
import xoric.prism.data.modules.ActorID;
import xoric.prism.data.modules.ErrorCode;
import xoric.prism.data.modules.ErrorID;
import xoric.prism.data.modules.ModuleID;
import xoric.prism.data.types.IPath_r;
import xoric.prism.data.types.Path;

public class PrismGlobal implements IPrismGlobal
{
	private Path dataPath;
	private FileTable fileTable;

	public void load()
	{

	}

	@Override
	public IPath_r getDataPath()
	{
		return dataPath;
	}

	public void loadAll() throws PrismException
	{
		loadTOC();
	}

	private void loadTOC() throws PrismException
	{
		String filename = "common/toc.meta";
		MetaFile f = new MetaFile(filename);
		f.load();
		MetaList metaList = f.getMetaList();
		MetaBlock metaBlock = metaList.findMetaBlock(MetaType.TOC);

		FileTable fileTable = new FileTable();

		for (MetaLine l : metaBlock.getMetaLines())
		{
			if (l.getKey() == MetaKey.ITEM && l.getHeap().texts.size() == 1)
			{
				String s = l.getHeap().texts.get(0).toString().toLowerCase();
				FileEntry f = new FileEntry(dataPath, filename);
				fileTable.add(f);
			}
			else
			{
				ErrorCode c = new ErrorCode(ModuleID.GLOBAL, ActorID.GENERIC, ErrorID.CORRUPT_LINE);
				PrismMetaFileException e = new PrismMetaFileException(c, filename);
				e.appendInfo("line", l.toString());
				throw e;
			}
		}
	}
}
