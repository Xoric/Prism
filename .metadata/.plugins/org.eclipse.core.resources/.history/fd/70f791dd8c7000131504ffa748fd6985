package xoric.prism.world.map;

import xoric.prism.data.Point;

public class NodeMap extends Map
{
	private TileNode[][] nodes;

	@Override
	public void setSize(int tilesX, int tilesY)
	{
		super.setSize(tilesX, tilesY);
		
		// copy existing tiles
		TileNode[][] newNodes = null;
		if (tilesX > 0 && tilesY > 0)
		{
			newNodes = new TileNode[tilesY][tilesX];
			if (nodes != null)
			{
				for (int iy = 0; iy < tilesY; ++iy)
				{
					newNodes[iy] = new TileNode[tilesX];
					for (int ix = 0; ix < tilesX; ++ix)
						newNodes[iy][ix] = (iy < nodes.length && ix < nodes[iy].length) ? nodes[iy][ix] : new TileNode(new Point(ix, iy),
								AllGrounds.GROUND0);
				}
			}
		}
		nodes = newNodes;
	}
}
