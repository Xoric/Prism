package xoric.prism.creator.common.factory;

import java.io.File;
import java.util.List;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import xoric.prism.data.tools.Common;

public class SuccessMessage
{
	private final StringBuffer sb;

	public SuccessMessage(String dataName)
	{
		sb = new StringBuffer();
		sb.append("<html>"  + dataName.substring(0,1).toUpperCase() + dataName.substring(1) + " created successfully.<br><br>");
	}

	public void addFile(String key, String value)
	{

	}

	public void addInfo(String key, String value)
	{

	}

	public void showSuccessMessage()
	{
		// get filesize
		File targetFile = result.getTargetFile();
		String filename = targetFile.getName();
		String fileSize = Common.getFileSize(targetFile.length());

		// generate message
		StringBuilder sb = new StringBuilder();
		sb.append("<html>Model created successfully.<br><br>");

		final String p1 = "<tr><td>";
		final String p2 = "</td><td><code>";
		final String p3 = "</code></td></tr>";

		sb.append("<table border=\"1\">");
		sb.append(p1 + "File: " + p2 + filename + p3);
		sb.append(p1 + "Size: " + p2 + fileSize + p3);
		sb.append(p1 + "Portrait: " + p2 + (result.hasPortrait() ? "yes" : "no") + p3);
		sb.append(p1 + "Animations: " + p2);

		List<AnimationResult> addedAnimations = result.getAddedAnimations();
		for (int i = 0; i < addedAnimations.size(); ++i)
		{
			if (i > 0)
				sb.append(", ");

			AnimationResult r = addedAnimations.get(i);
			sb.append(r.toString());
		}
		sb.append(p3);
		sb.append("</table>");
		sb.append("</html>");

		// load the model's portrait as icon if any
		ImageIcon icon = null;
		File portraitFile = model.getPath().getFile("portrait.png");
		try
		{
			// load portrait as icon
			if (portraitFile.exists())
				icon = IconLoader.loadIconFromFile(portraitFile, 140, 140);
		}
		catch (Exception e)
		{
			icon = null;
		}

		// show success message with or without custom icon
		JOptionPane.showMessageDialog(null, sb.toString(), "Generate model", JOptionPane.INFORMATION_MESSAGE, icon);
	}
}
