package xoric.prism.creator.custom.model;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;

import xoric.prism.data.exceptions.PrismException;
import xoric.prism.data.types.IPackable;
import xoric.prism.data.types.IText_r;
import xoric.prism.data.types.IntPacker;
import xoric.prism.data.types.Rect;
import xoric.prism.data.types.Text;
import xoric.prism.data.types.TextPacker;

public class ObjectModel implements IPackable
{
	private Text name;
	private List<Rect> rects;

	public ObjectModel()
	{
		this.name = new Text("NEW OBJECT");
		this.rects = new ArrayList<Rect>();
	}

	public ObjectModel(Text name)
	{
		setName(name);
		this.rects = new ArrayList<Rect>();
	}

	public void setName(Text name)
	{
		this.name = name;
	}

	public int getRectCount()
	{
		return rects.size();
	}

	public Rect getRect(int index)
	{
		return rects.get(index);
	}

	public void addRect(Rect rect)
	{
		rects.add(rect);
	}

	public IText_r getName()
	{
		return name;
	}

	@Override
	public void unpack(InputStream stream) throws IOException, PrismException
	{
		name = TextPacker.unpack_s(stream);
		int n = IntPacker.unpack_s(stream);

		for (int i = 0; i < n; ++i)
		{
			Rect r = new Rect();
			r.unpack(stream);
			addRect(r);
		}
	}

	@Override
	public void pack(OutputStream stream) throws IOException
	{
		TextPacker.pack_s(stream, name);
		IntPacker.pack_s(stream, rects.size());
	}
}
