package xoric.prism.creator.drawer.view;

import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;

import javax.swing.JLabel;
import javax.swing.JPanel;

import xoric.prism.creator.drawer.control.IDrawerControl;
import xoric.prism.creator.drawer.model.AnimationModel;
import xoric.prism.world.entities.AnimationIndex;

public class AnimationLine extends JPanel implements IAnimationLine
{
	private static final long serialVersionUID = 1L;

	protected AnimationIndex animation;

	protected boolean isUsed;

	private final JLabel nameLabel;
	private final JLabel descriptionLabel;

	protected IDrawerControl control;

	public AnimationLine(AnimationIndex animation)
	{
		GridBagLayout layout = new GridBagLayout();
		this.setLayout(layout);

		this.animation = animation;
		this.isUsed = false;

		nameLabel = createLabel(animation.toString());
		nameLabel.setFont(nameLabel.getFont().deriveFont(Font.BOLD));

		descriptionLabel = createLabel(animation.getDescription().toLowerCase());

		GridBagConstraints c = new GridBagConstraints(0, 0, 1, 1, 1.0, 0.5, GridBagConstraints.NORTHWEST, GridBagConstraints.BOTH,
				new Insets(0, 0, 0, 0), 0, 0);
		add(nameLabel, c);

		c = new GridBagConstraints(0, 1, 1, 1, 1.0, 0.5, GridBagConstraints.NORTHWEST, GridBagConstraints.BOTH, new Insets(0, 0, 0, 0), 0,
				0);
		add(descriptionLabel, c);
	}

	public boolean isUsed()
	{
		return isUsed;
	}

	public void setControl(IDrawerControl control)
	{
		this.control = control;
	}

	@Override
	public void setEnabled(boolean enabled)
	{
		super.setEnabled(enabled);
		nameLabel.setEnabled(enabled);
		descriptionLabel.setEnabled(enabled);
	}

	private static JLabel createLabel(String text)
	{
		JLabel l = new JLabel(text);
		l.setOpaque(true);
		return l;
	}

	public AnimationIndex getAnimationIndex()
	{
		return animation;
	}

	public String getAnimationName()
	{
		return nameLabel.getText();
	}

	@Override
	public void displayAnimation(AnimationModel m)
	{
		// show/hide buttons
		isUsed = m != null && m.isUsed();
		//		showAddButton(!isUsed);

		// display other information
		AnimationIndex a = m.getAnimationIndex();
		nameLabel.setText(a.toString());
		descriptionLabel.setText(animation.getDescription().toLowerCase());
	}
}
