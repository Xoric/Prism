package xoric.prism.creator.drawer.view;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;

import xoric.prism.data.types.Path;
import xoric.prism.swing.input.PathInput;
import xoric.prism.swing.input.fields.IInputListener;
import xoric.prism.swing.input.fields.PrismIntField;
import xoric.prism.swing.input.fields.PrismTextField;

public class NewModelDialog implements ActionListener, IInputListener
{
	private final JLabel nameLabel;
	private final PrismTextField nameField;

	private final JPanel sizePanel0;
	private final PrismIntField widthField;
	private final PrismIntField heightField;
	private final JPanel sizePanel;

	private final JPanel pathPanel0;
	private final JTextField pathField;
	private final JPanel pathPanel;
	private final JButton pathButton;

	private final JLabel previewLabel;
	private final JLabel previewWidthLabel;
	private final JLabel previewHeightLabel;
	private final JPanel innerPreviewPanel;
	private final JPanel previewPanel;

	private final JOptionPane pane;

	public NewModelDialog()
	{
		// maximum tile size
		final int previewSizeMaxX = 384;
		final int previewSizeMaxY = 256;

		final int tileSizeMaxX = 256;
		final int tileSizeMaxY = 200;

		// model name
		nameLabel = new JLabel("Name");
		nameField = new PrismTextField("NEW MODEL");

		// working directory
		JLabel pathLabel = new JLabel("Working directory");
		JLabel pathLabel2 = new JLabel(" ? ");
		pathLabel2.setBorder(BorderFactory.createEtchedBorder());
		pathLabel2.setToolTipText("This directory will be used to store the model's settings and images.");
		pathPanel0 = new JPanel(new BorderLayout());
		pathPanel0.add(BorderLayout.CENTER, pathLabel);
		pathPanel0.add(BorderLayout.EAST, pathLabel2);
		pathPanel = new JPanel(new BorderLayout());
		pathField = new JTextField("");
		pathButton = new JButton("...");
		pathButton.addActionListener(this);
		pathPanel.add(BorderLayout.CENTER, pathField);
		pathPanel.add(BorderLayout.EAST, pathButton);

		// tile size
		final int tileSizeX = 48;
		final int tileSizeY = 48;
		JLabel sizeLabel = new JLabel("Tile size");
		JLabel sizeLabel2 = new JLabel(" ? ");
		sizeLabel2.setBorder(BorderFactory.createEtchedBorder());
		sizeLabel2.setToolTipText("The size of one sprite within the images.");
		sizePanel0 = new JPanel();//new BorderLayout());
		//		sizePanel0.add(BorderLayout.CENTER, sizeLabel);
		//		sizePanel0.add(BorderLayout.EAST, sizeLabel2);
		sizePanel0.add(sizeLabel);
		sizePanel0.add(sizeLabel2);
		widthField = new PrismIntField(tileSizeX);
		heightField = new PrismIntField(tileSizeY);
		widthField.setMaxValue(tileSizeMaxX);
		widthField.setMinValue(0);
		heightField.setMaxValue(tileSizeMaxY);
		widthField.setMinValue(0);
		widthField.setInputListener(this);
		heightField.setInputListener(this);
		sizePanel = new JPanel(new GridBagLayout());
		GridBagConstraints c = new GridBagConstraints(0, 0, 1, 1, 0.35, 1.0, GridBagConstraints.NORTHWEST, GridBagConstraints.BOTH,
				new Insets(0, 0, 0, 0), 0, 0);
		sizePanel.add(widthField, c);
		c = new GridBagConstraints(1, 0, 1, 1, 0.1, 1.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 0, 0), 0, 0);
		JLabel l = new JLabel("x");
		l.setHorizontalAlignment(SwingConstants.CENTER);
		sizePanel.add(l, c);
		c = new GridBagConstraints(2, 0, 1, 1, 0.35, 1.0, GridBagConstraints.NORTHWEST, GridBagConstraints.BOTH, new Insets(0, 0, 0, 0), 0,
				0);
		sizePanel.add(heightField, c);
		c = new GridBagConstraints(3, 0, 1, 1, 0.2, 1.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 0, 0), 0, 0);
		l = new JLabel("pixels");
		l.setHorizontalAlignment(SwingConstants.CENTER);
		sizePanel.add(l, c);

		// preview label
		previewLabel = new JLabel();
		previewLabel.setBackground(new Color(0, 0, 0, 125));
		previewLabel.setOpaque(true);
		previewLabel.setBorder(BorderFactory.createLineBorder(Color.black));

		previewWidthLabel = new JLabel();
		previewHeightLabel = new JLabel();

		innerPreviewPanel = new JPanel(new BorderLayout());
		innerPreviewPanel.add(BorderLayout.CENTER, previewLabel);
		innerPreviewPanel.add(BorderLayout.EAST, previewHeightLabel);
		innerPreviewPanel.add(BorderLayout.SOUTH, previewWidthLabel);

		previewPanel = new JPanel();
		previewPanel.add(innerPreviewPanel);
		previewPanel.setBorder(BorderFactory.createTitledBorder("Preview"));
		previewPanel.setPreferredSize(new Dimension(previewSizeMaxX, previewSizeMaxY));

		Object[] message = { null, null, nameLabel, nameField, pathPanel0, pathPanel, sizePanel0, sizePanel, previewPanel };
		pane = new JOptionPane(message, JOptionPane.PLAIN_MESSAGE, JOptionPane.OK_CANCEL_OPTION);

		setPreview(tileSizeX, tileSizeY);
	}

	private void setPreview(int x, int y)
	{
		previewWidthLabel.setText("width: " + x);
		previewHeightLabel.setText(" height: " + y);
		Dimension d = new Dimension(x, y);
		previewLabel.setMinimumSize(d);
		previewLabel.setMaximumSize(d);
		previewLabel.setPreferredSize(d);
	}

	public void show()
	{
		pane.createDialog(null, "New Model").setVisible(true);
	}

	@Override
	public void actionPerformed(ActionEvent e)
	{
		Object o = e.getSource();

		if (o == pathButton)
		{
			Path path = PathInput.showDialog("Select working directory");
			if (path != null)
				pathField.setText(path.toString());
		}
	}

	@Override
	public void changedInput(Object source)
	{
		if (source == widthField || source == heightField)
		{
			setPreview(widthField.getInt(), heightField.getInt());
		}
	}
}
