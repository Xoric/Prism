package xoric.prism.creator.common.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JMenu;
import javax.swing.JMenuItem;

import xoric.prism.creator.common.control.IMainMenuListener;

public class ToolsMenu extends JMenu implements ActionListener
{
	private static final long serialVersionUID = 1L;

	private final IMainMenuListener listener;

	private JMenuItem menuItemNew;
	private JMenuItem menuItemOpen;
	private RecentMenu recentMenu;
	private JMenu menuCreate;
	private JMenuItem menuItemClose;
	private JMenuItem menuItemExit;

	public ToolsMenu(IMainMenuListener listener, String dataName)
	{
		super(dataName.substring(0, 1).toUpperCase() + dataName.substring(1));

		this.listener = listener;

		menuItemNew = createMenuItem("New");
		addSeparator();

		menuItemOpen = createMenuItem("Open");
		recentMenu = new RecentMenu();
		add(recentMenu);
		addSeparator();

		menuCreate = new JMenu("Create");
		add(menuCreate);
		menuItemClose = createMenuItem("Close");
		addSeparator();

		menuItemExit = createMenuItem("Exit");
	}

	public void addCreationItem(JMenuItem item)
	{
		menuCreate.add(item);
	}

	private JMenuItem createMenuItem(String text)
	{
		JMenuItem m = new JMenuItem(text);
		m.addActionListener(this);
		add(m);
		return m;
	}

	@Override
	public void actionPerformed(ActionEvent e)
	{
		Object o = e.getSource();

		if (o == menuItemNew)
			listener.requestNewObject();
		else if (o == menuItemOpen)
			listener.requestOpenObject();
		else if (o == menuItemClose)
			listener.requestCloseObject();
		else if (o == menuItemExit)
			listener.requestExit();
	}
}
