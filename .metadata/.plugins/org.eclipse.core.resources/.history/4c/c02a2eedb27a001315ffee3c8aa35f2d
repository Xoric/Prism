package xoric.prism.creator.drawer.image;

import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.Insets;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;

import xoric.prism.data.types.IPath_r;

public class SpriteThumbPanel extends JPanel implements MouseListener
{
	private static final long serialVersionUID = 1L;

	private final JLabel iconLabel;
	private final JLabel nameLabel;

	public SpriteThumbPanel(int frameIndex)
	{
		super(new GridBagLayout());

		this.setBorder(BorderFactory.createEtchedBorder());

		iconLabel = new JLabel();
		nameLabel = new JLabel();

		iconLabel.addMouseListener(this);
		nameLabel.addMouseListener(this);

		GridBagConstraints c = new GridBagConstraints(0, 0, 1, 1, 1.0, 1.0, GridBagConstraints.CENTER, GridBagConstraints.NONE, new Insets(
				2, 2, 0, 2), 0, 0);
		add(iconLabel, c);

		c = new GridBagConstraints(0, 2, 1, 1, 1.0, 1.0, GridBagConstraints.CENTER, GridBagConstraints.NONE, new Insets(2, 2, 2, 2), 0, 0);
		add(nameLabel, c);
	}

	public void loadImage(IPath_r path, String filename, int frameIndex)
	{
		nameLabel.setText("<html><span style=\"background-color:#DCDCDC; color:#0;\"><strong>" + "Frame " + frameIndex
				+ "<br><font size=\"-2\">" + filename.toLowerCase() + "</font></html>");

		try
		{
			File file = path.getFile(filename);
			Image img = ImageIO.read(file);
			ImageIcon icn = new ImageIcon(img);
			iconLabel.setIcon(icn);
		}
		catch (IOException e)
		{
			iconLabel.setIcon(null);
			iconLabel.setText(e.toString());
		}
	}

	@Override
	public void mouseClicked(MouseEvent arg0)
	{
	}

	@Override
	public void mouseEntered(MouseEvent arg0)
	{
		this.setBorder(BorderFactory.createLineBorder(Color.blue));
	}

	@Override
	public void mouseExited(MouseEvent arg0)
	{
		this.setBorder(BorderFactory.createEtchedBorder());
	}

	@Override
	public void mousePressed(MouseEvent arg0)
	{
	}

	@Override
	public void mouseReleased(MouseEvent arg0)
	{
	}
}
