package xoric.prism.exceptions;

import xoric.prism.data.modules.ErrorCode;

public class PrismException extends Exception
{
	private static final long serialVersionUID = 1L;

	private StringBuffer stringBuffer;
	private ErrorCode errorCode;

	public PrismException(ErrorCode errorCode, String info)
	{
		this.stringBuffer = new StringBuffer();
		this.errorCode = errorCode;

		appendLine("module", errorCode.getModuleID().toString());
		appendLine("actor", errorCode.getActorID().toString());
		appendLine("error", errorCode.getErrorID().toString());
	}

	@Override
	public String toString()
	{
		StringBuffer sb = new StringBuffer();
		listInfo(sb);
		return sb.toString();
	}

	protected void listInfo(StringBuffer sb)
	{
		appendLine(sb, "module", errorCode.getModuleID().toString());
		appendLine(sb, "actor", errorCode.getActorID().toString());
		appendLine(sb, "error", errorCode.getErrorID().toString());
		appendLine(sb, "info", info);
	}

	protected void appendLine(StringBuffer sb, String key, String value)
	{
		if (stringBuffer.length() > 0)
			stringBuffer.append(", ");
		stringBuffer.append(key + "=\"" + value + "\"");
	}
}
