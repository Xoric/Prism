package xoric.prism.creator.drawer.control;

import java.awt.image.BufferedImage;
import java.io.File;

import javax.imageio.ImageIO;

import xoric.prism.creator.drawer.model.AnimationModel;
import xoric.prism.creator.drawer.model.DrawerModel;
import xoric.prism.data.exceptions.PrismException;
import xoric.prism.data.types.IPath_r;
import xoric.prism.data.types.IPoint_r;
import xoric.prism.world.entities.AnimationIndex;
import xoric.prism.world.entities.ViewAngle;

public class SpriteControl extends ControlLayer
{
	public SpriteControl(DrawerModel model, IBusyControl busyControl)
	{
		super(model, busyControl);
	}

	public void addSprite(AnimationIndex a, ViewAngle v, int index)
	{
		IPath_r path = model.getPath();

		// find highest existing index
		int n = index;
		boolean b;
		do
		{
			String filename = AnimationModel.getFileName(a, v, n);
			File file = path.getFile(filename);
			b = file.exists();
			if (b)
				++n;
		}
		while (b);

		// increase all indices equal or greater than the given parameter by one
		try
		{
			for (int i = n; i >= index; --i)
			{
				File fileOld = path.getFile(AnimationModel.getFileName(a, v, i));
				File fileNew = path.getFile(AnimationModel.getFileName(a, v, i + 1));
				fileOld.renameTo(fileNew);
			}
		}
		catch (Exception e0)
		{
			PrismException e = new PrismException();
		}

		// create new sprite
		IPoint_r tileSize = model.getTileSize();
		BufferedImage img = new BufferedImage(tileSize.getX(), tileSize.getY(), BufferedImage.TYPE_INT_ARGB);
		File file = path.getFile(AnimationModel.getFileName(a, v, index));
		ImageIO.write(img, "png", file);
	}
}
