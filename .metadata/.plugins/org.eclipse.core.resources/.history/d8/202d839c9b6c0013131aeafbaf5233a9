package xoric.prism.data;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

public class AttachmentHeader implements IPackable
{
	private TextPacker textPacker;
	private IntPacker intPacker;

	private final Text name;
	private final int start;
	private final int size;
	private final boolean isCompressed;

	public AttachmentHeader(Text name, int start, int size, boolean isCompressed)
	{
		this.name = name;
		this.start = start;
		this.size = size;
		this.isCompressed = isCompressed;
	}

	private IntPacker getIntPacker()
	{
		if (intPacker == null)
			intPacker = new IntPacker();

		return intPacker;
	}

	private TextPacker getTextPacker()
	{
		if (textPacker == null)
			textPacker = new TextPacker();

		return textPacker;
	}

	public IText_r getName()
	{
		return name;
	}

	public int getStart()
	{
		return start;
	}

	public int getSize()
	{
		return size;
	}

	public boolean isCompressed()
	{
		return isCompressed;
	}

	@Override
	public void pack(OutputStream stream) throws IOException
	{
		// TODO Auto-generated method stub

	}

	@Override
	public void unpack(InputStream stream) throws IOException
	{
		// TODO Auto-generated method stub

	}

	@Override
	public int getPackedSize()
	{
		textPacker.setText(name);
		int size = textPacker.getPackedSize();

		intPacker.setValue(this.size);
		size += intPacker.getPackedSize();
		
		int compressed = isCompressed ? 1 : 0;
		intPacker.setValue(compressed);
		size += intPacker.getPackedSize();

		return size;
	}
}
